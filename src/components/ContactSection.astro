---
// Contact Section mit Advanced Mikrointeraktionen und 3D Elements
---

<section id="contact" class="py-20 lg:py-32 bg-gradient-to-br from-gray-900 via-black to-gray-800 relative overflow-hidden">
  <!-- Animated Background -->
  <div class="absolute inset-0">
    <!-- Animated Gradients -->
    <div class="absolute top-0 left-1/4 w-96 h-96 bg-dopamine-500/20 rounded-full filter blur-3xl animate-pulse"></div>
    <div class="absolute bottom-0 right-1/4 w-96 h-96 bg-electric-500/20 rounded-full filter blur-3xl animate-pulse" style="animation-delay: 1s;"></div>
    
    <!-- Grid Pattern -->
    <div class="absolute inset-0 opacity-5">
      <div class="grid-pattern"></div>
    </div>
    
    <!-- Floating Particles -->
    <div class="particles-container">
      <div class="particle" style="left: 10%; top: 20%; animation-delay: 0s;"></div>
      <div class="particle" style="left: 80%; top: 30%; animation-delay: 2s;"></div>
      <div class="particle" style="left: 60%; top: 70%; animation-delay: 4s;"></div>
      <div class="particle" style="left: 30%; top: 80%; animation-delay: 1s;"></div>
      <div class="particle" style="left: 90%; top: 10%; animation-delay: 3s;"></div>
    </div>
  </div>

  <div class="container mx-auto px-6 lg:px-8 relative z-10">
    <!-- Section Header -->
    <div class="text-center mb-16 contact-header opacity-0 translate-y-8">
      <h2 class="text-5xl lg:text-7xl font-serif font-bold mb-6 text-white leading-tight">
        <span class="block">Lass uns</span>
        <span class="block bg-gradient-to-r from-dopamine-400 to-electric-400 bg-clip-text text-transparent">zusammenarbeiten</span>
      </h2>
      
      <p class="text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
        Bereit für dein nächstes Projekt? Ich freue mich darauf, deine Vision zum Leben zu erwecken.
        <span class="text-dopamine-400 font-medium">Kontaktiere mich für ein unverbindliches Gespräch.</span>
      </p>
    </div>

    <div class="grid lg:grid-cols-2 gap-16 lg:gap-20 max-w-7xl mx-auto">
      
      <!-- Left Column - Contact Form -->
      <div class="contact-form-container opacity-0 translate-x-8">
        <div class="contact-glass-card p-8 lg:p-10 rounded-3xl">
          <h3 class="text-3xl font-serif font-bold mb-8 text-white">Projekt anfragen</h3>
          
          <form class="contact-form space-y-6" id="contactForm">
            <!-- Name Input -->
            <div class="input-group">
              <div class="input-container">
                <input 
                  type="text" 
                  id="name" 
                  name="name" 
                  required 
                  class="contact-input"
                  placeholder=" "
                >
                <label for="name" class="contact-label">Dein Name</label>
                <div class="input-underline"></div>
              </div>
            </div>

            <!-- Email Input -->
            <div class="input-group">
              <div class="input-container">
                <input 
                  type="email" 
                  id="email" 
                  name="email" 
                  required 
                  class="contact-input"
                  placeholder=" "
                >
                <label for="email" class="contact-label">E-Mail Adresse</label>
                <div class="input-underline"></div>
              </div>
            </div>

            <!-- Project Type -->
            <div class="input-group">
              <div class="input-container">
                <select id="projectType" name="projectType" class="contact-input contact-select" required>
                  <option value="" disabled selected></option>
                  <option value="portrait">Portraitfotografie</option>
                  <option value="wedding">Hochzeitsfotografie</option>
                  <option value="landscape">Landschaftsfotografie</option>
                  <option value="commercial">Kommerzielle Fotografie</option>
                  <option value="event">Event-Fotografie</option>
                  <option value="video">Videografie</option>
                  <option value="other">Sonstiges</option>
                </select>
                <label for="projectType" class="contact-label">Projekt Art</label>
                <div class="input-underline"></div>
              </div>
            </div>

            <!-- Budget Range -->
            <div class="input-group">
              <label class="block text-gray-300 text-sm font-medium mb-3">Budget Range</label>
              <div class="budget-slider-container">
                <input type="range" id="budgetRange" name="budgetRange" min="500" max="10000" value="2500" class="budget-slider">
                <div class="budget-display">
                  <span id="budgetValue">2.500€</span>
                </div>
              </div>
            </div>

            <!-- Message -->
            <div class="input-group">
              <div class="input-container">
                <textarea 
                  id="message" 
                  name="message" 
                  rows="5" 
                  required 
                  class="contact-input contact-textarea"
                  placeholder=" "
                ></textarea>
                <label for="message" class="contact-label">Deine Nachricht</label>
                <div class="input-underline"></div>
              </div>
            </div>

            <!-- Submit Button -->
            <div class="pt-4">
              <button type="submit" class="contact-submit-btn group" id="submitBtn">
                <span class="btn-text">Nachricht senden</span>
                <span class="btn-loading hidden">
                  <svg class="animate-spin w-5 h-5" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  Wird gesendet...
                </span>
                <svg class="w-6 h-6 ml-3 transition-transform duration-300 group-hover:translate-x-1 btn-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                </svg>
              </button>
            </div>
          </form>
        </div>
      </div>

      <!-- Right Column - Contact Info & 3D Cards -->
      <div class="contact-info-container opacity-0 translate-x-8">
        <!-- Contact Methods -->
        <div class="space-y-6 mb-12">
          <h3 class="text-3xl font-serif font-bold text-white mb-8">Kontakt Informationen</h3>
          
          <!-- Email Card -->
          <div class="contact-method-card" data-tilt>
            <div class="contact-method-icon">
              <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26c.37.2.87.2 1.24 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
            </div>
            <div class="contact-method-content">
              <h4 class="text-lg font-semibold text-white">E-Mail</h4>
              <p class="text-gray-300">hello@redrotation.photo</p>
              <a href="mailto:hello@redrotation.photo" class="contact-link">Nachricht schreiben</a>
            </div>
          </div>

          <!-- Phone Card -->
          <div class="contact-method-card" data-tilt>
            <div class="contact-method-icon">
              <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
              </svg>
            </div>
            <div class="contact-method-content">
              <h4 class="text-lg font-semibold text-white">Telefon</h4>
              <p class="text-gray-300">+49 123 456 7890</p>
              <a href="tel:+491234567890" class="contact-link">Anrufen</a>
            </div>
          </div>

          <!-- Location Card -->
          <div class="contact-method-card" data-tilt>
            <div class="contact-method-icon">
              <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
            </div>
            <div class="contact-method-content">
              <h4 class="text-lg font-semibold text-white">Studio</h4>
              <p class="text-gray-300">München, Bayern</p>
              <a href="#" class="contact-link">Route planen</a>
            </div>
          </div>
        </div>

        <!-- Social Media -->
        <div class="social-section">
          <h4 class="text-xl font-semibold text-white mb-6">Folge mir</h4>
          <div class="flex space-x-4">
            <a href="#" class="social-link" data-platform="instagram">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987s11.987-5.367 11.987-11.987C24.004 5.367 18.637.001 12.017.001zM8.449 16.988c-1.297 0-2.448-.49-3.328-1.297L6.32 14.492c.6.6 1.296.898 2.129.898 1.695 0 3.027-1.297 3.027-2.927 0-1.695-1.332-2.992-3.027-2.992-1.695 0-3.027 1.297-3.027 2.992v5.525zm7.54 0c-1.297 0-2.448-.49-3.328-1.297l1.199-1.199c.6.6 1.296.898 2.129.898 1.695 0 3.027-1.297 3.027-2.927 0-1.695-1.332-2.992-3.027-2.992-1.695 0-3.027 1.297-3.027 2.992v5.525z"/>
              </svg>
            </a>
            
            <a href="#" class="social-link" data-platform="facebook">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
              </svg>
            </a>
            
            <a href="#" class="social-link" data-platform="linkedin">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
            </a>
          </div>
        </div>

        <!-- Response Time Info -->
        <div class="response-info mt-12 p-6 rounded-2xl bg-gradient-to-r from-dopamine-500/10 to-electric-500/10 border border-dopamine-500/20">
          <div class="flex items-center mb-3">
            <div class="flex-shrink-0 w-3 h-3 bg-green-400 rounded-full mr-3 animate-pulse"></div>
            <h4 class="text-lg font-semibold text-white">Schnelle Antwort</h4>
          </div>
          <p class="text-gray-300 text-sm">
            Ich antworte normalerweise innerhalb von 24 Stunden. 
            Für dringende Anfragen kannst du mich auch telefonisch erreichen.
          </p>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Grid Pattern */
  .grid-pattern {
    background-image: 
      linear-gradient(rgba(255, 255, 255, 0.03) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
    background-size: 50px 50px;
    width: 100%;
    height: 100%;
  }

  /* Particles */
  .particles-container {
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  .particle {
    position: absolute;
    width: 3px;
    height: 3px;
    background: radial-gradient(circle, #f352ff 0%, transparent 70%);
    border-radius: 50%;
    animation: particleFloat 8s ease-in-out infinite;
    opacity: 0.7;
  }

  @keyframes particleFloat {
    0%, 100% { transform: translateY(0px) scale(1); opacity: 0.7; }
    50% { transform: translateY(-50px) scale(1.2); opacity: 1; }
  }

  /* Glass Card */
  .contact-glass-card {
    background: rgba(0, 0, 0, 0.4);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
  }

  /* Form Inputs */
  .input-container {
    position: relative;
  }

  .contact-input {
    width: 100%;
    padding: 1rem 0 0.5rem 0;
    background: transparent;
    border: none;
    border-bottom: 2px solid rgba(255, 255, 255, 0.2);
    color: white;
    font-size: 1rem;
    transition: all 0.3s ease;
    outline: none;
  }

  .contact-input:focus,
  .contact-input:not(:placeholder-shown) {
    border-bottom-color: #f352ff;
  }

  .contact-label {
    position: absolute;
    left: 0;
    top: 1rem;
    color: rgba(255, 255, 255, 0.6);
    font-size: 1rem;
    transition: all 0.3s ease;
    pointer-events: none;
  }

  .contact-input:focus ~ .contact-label,
  .contact-input:not(:placeholder-shown) ~ .contact-label {
    top: 0;
    font-size: 0.875rem;
    color: #f352ff;
  }

  .input-underline {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, #f352ff, #00d9ff);
    transition: width 0.3s ease;
  }

  .contact-input:focus ~ .input-underline {
    width: 100%;
  }

  /* Textarea */
  .contact-textarea {
    resize: vertical;
    min-height: 120px;
  }

  /* Select */
  .contact-select {
    cursor: pointer;
  }

  .contact-select option {
    background: #1f2937;
    color: white;
  }

  /* Budget Slider */
  .budget-slider-container {
    position: relative;
  }

  .budget-slider {
    width: 100%;
    height: 8px;
    border-radius: 4px;
    background: rgba(255, 255, 255, 0.2);
    outline: none;
    appearance: none;
    cursor: pointer;
  }

  .budget-slider::-webkit-slider-thumb {
    appearance: none;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background: linear-gradient(45deg, #f352ff, #00d9ff);
    cursor: pointer;
    box-shadow: 0 4px 12px rgba(243, 82, 255, 0.4);
    transition: all 0.3s ease;
  }

  .budget-slider::-webkit-slider-thumb:hover {
    transform: scale(1.2);
    box-shadow: 0 6px 20px rgba(243, 82, 255, 0.6);
  }

  .budget-display {
    text-align: center;
    margin-top: 0.5rem;
  }

  #budgetValue {
    font-size: 1.125rem;
    font-weight: 600;
    color: #f352ff;
  }

  /* Submit Button */
  .contact-submit-btn {
    width: 100%;
    padding: 1rem 2rem;
    background: linear-gradient(90deg, #f352ff, #00d9ff);
    color: white;
    border: none;
    border-radius: 50px;
    font-size: 1.125rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .contact-submit-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transition: left 0.6s;
  }

  .contact-submit-btn:hover::before {
    left: 100%;
  }

  .contact-submit-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 35px rgba(243, 82, 255, 0.4);
  }

  .contact-submit-btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
  }

  /* Contact Method Cards */
  .contact-method-card {
    display: flex;
    align-items: center;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 1rem;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .contact-method-card:hover {
    transform: translateY(-5px) scale(1.02);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    border-color: rgba(243, 82, 255, 0.3);
  }

  .contact-method-icon {
    flex-shrink: 0;
    width: 60px;
    height: 60px;
    background: linear-gradient(45deg, #f352ff, #00d9ff);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    margin-right: 1rem;
  }

  .contact-method-content h4 {
    margin-bottom: 0.25rem;
  }

  .contact-link {
    color: #f352ff;
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 500;
    transition: color 0.3s ease;
  }

  .contact-link:hover {
    color: #00d9ff;
  }

  /* Social Links */
  .social-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50px;
    height: 50px;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    color: white;
    transition: all 0.3s ease;
    text-decoration: none;
  }

  .social-link:hover {
    transform: translateY(-3px) scale(1.1);
    background: linear-gradient(45deg, #f352ff, #00d9ff);
    border-color: transparent;
    box-shadow: 0 10px 25px rgba(243, 82, 255, 0.3);
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .contact-method-card {
      flex-direction: column;
      text-align: center;
    }
    
    .contact-method-icon {
      margin-right: 0;
      margin-bottom: 1rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Intersection Observer for Contact Section
    const contactHeader = document.querySelector('.contact-header');
    const contactFormContainer = document.querySelector('.contact-form-container');
    const contactInfoContainer = document.querySelector('.contact-info-container');
    
    const observerOptions = {
      threshold: 0.2,
      rootMargin: '0px 0px -100px 0px'
    };

    const contactObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // Animate elements with stagger
          setTimeout(() => {
            contactHeader.style.opacity = '1';
            contactHeader.style.transform = 'translateY(0)';
            contactHeader.style.transition = 'all 1s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
          }, 100);
          
          setTimeout(() => {
            contactFormContainer.style.opacity = '1';
            contactFormContainer.style.transform = 'translateX(0)';
            contactFormContainer.style.transition = 'all 1s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
          }, 300);
          
          setTimeout(() => {
            contactInfoContainer.style.opacity = '1';
            contactInfoContainer.style.transform = 'translateX(0)';
            contactInfoContainer.style.transition = 'all 1s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
          }, 500);
        }
      });
    }, observerOptions);

    [contactHeader, contactFormContainer, contactInfoContainer].forEach(el => {
      if (el) contactObserver.observe(el);
    });

    // Form Functionality
    const contactForm = document.getElementById('contactForm');
    const submitBtn = document.getElementById('submitBtn');
    const budgetSlider = document.getElementById('budgetRange');
    const budgetValue = document.getElementById('budgetValue');

    // Budget Slider
    budgetSlider.addEventListener('input', function() {
      const value = parseInt(this.value);
      budgetValue.textContent = `${value.toLocaleString('de-DE')}€`;
      
      // Visual feedback
      const percentage = (value - 500) / (10000 - 500) * 100;
      this.style.background = `linear-gradient(to right, #f352ff 0%, #00d9ff ${percentage}%, rgba(255,255,255,0.2) ${percentage}%, rgba(255,255,255,0.2) 100%)`;
    });

    // Trigger initial slider styling
    budgetSlider.dispatchEvent(new Event('input'));

    // Form Submission
    contactForm.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Button loading state
      const btnText = submitBtn.querySelector('.btn-text');
      const btnLoading = submitBtn.querySelector('.btn-loading');
      const btnIcon = submitBtn.querySelector('.btn-icon');
      
      submitBtn.disabled = true;
      btnText.classList.add('hidden');
      btnLoading.classList.remove('hidden');
      btnIcon.classList.add('hidden');
      
      // Simulate form submission (replace with actual form handling)
      try {
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // Success feedback
        showNotification('Nachricht erfolgreich gesendet!', 'success');
        contactForm.reset();
        budgetSlider.dispatchEvent(new Event('input')); // Reset slider display
        
      } catch (error) {
        // Error feedback
        showNotification('Fehler beim Senden. Bitte versuche es erneut.', 'error');
      } finally {
        // Reset button
        submitBtn.disabled = false;
        btnText.classList.remove('hidden');
        btnLoading.classList.add('hidden');
        btnIcon.classList.remove('hidden');
      }
    });

    // Enhanced Input Animations
    const inputs = document.querySelectorAll('.contact-input');
    inputs.forEach(input => {
      input.addEventListener('focus', function() {
        this.parentElement.classList.add('focused');
        
        // Ripple effect
        const ripple = document.createElement('div');
        ripple.className = 'input-ripple';
        this.parentElement.appendChild(ripple);
        
        setTimeout(() => {
          ripple.remove();
        }, 600);
      });
      
      input.addEventListener('blur', function() {
        this.parentElement.classList.remove('focused');
      });
    });

    // 3D Tilt Effect for Contact Cards
    const tiltCards = document.querySelectorAll('[data-tilt]');
    
    tiltCards.forEach(card => {
      card.addEventListener('mousemove', function(e) {
        const rect = this.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        const centerX = rect.width / 2;
        const centerY = rect.height / 2;
        
        const rotateX = (y - centerY) / 10;
        const rotateY = (centerX - x) / 10;
        
        this.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateY(-5px) scale(1.02)`;
      });
      
      card.addEventListener('mouseleave', function() {
        this.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) translateY(0) scale(1)';
      });
    });

    // Social Link Interactions
    const socialLinks = document.querySelectorAll('.social-link');
    socialLinks.forEach(link => {
      link.addEventListener('mouseenter', function() {
        const platform = this.dataset.platform;
        
        // Platform-specific colors
        const colors = {
          instagram: 'linear-gradient(45deg, #f09433, #e6683c, #dc2743, #cc2366, #bc1888)',
          facebook: '#1877F2',
          linkedin: '#0A66C2'
        };
        
        if (colors[platform]) {
          this.style.background = colors[platform];
        }
      });
      
      link.addEventListener('mouseleave', function() {
        this.style.background = 'linear-gradient(45deg, #f352ff, #00d9ff)';
      });
    });

    // Notification System
    function showNotification(message, type = 'info') {
      const notification = document.createElement('div');
      notification.className = `notification notification-${type}`;
      notification.innerHTML = `
        <div class="notification-content">
          <span>${message}</span>
          <button class="notification-close">&times;</button>
        </div>
      `;
      
      document.body.appendChild(notification);
      
      // Auto remove
      setTimeout(() => {
        notification.remove();
      }, 5000);
      
      // Manual close
      notification.querySelector('.notification-close').addEventListener('click', () => {
        notification.remove();
      });
    }

    // Add notification styles dynamically
    const notificationStyles = document.createElement('style');
    notificationStyles.textContent = `
      .notification {
        position: fixed;
        top: 2rem;
        right: 2rem;
        z-index: 1000;
        padding: 1rem 1.5rem;
        background: rgba(0, 0, 0, 0.9);
        backdrop-filter: blur(10px);
        border-radius: 0.5rem;
        color: white;
        border-left: 4px solid #f352ff;
        animation: slideIn 0.3s ease;
      }
      
      .notification-success {
        border-left-color: #10b981;
      }
      
      .notification-error {
        border-left-color: #ef4444;
      }
      
      .notification-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 1rem;
      }
      
      .notification-close {
        background: none;
        border: none;
        color: white;
        font-size: 1.5rem;
        cursor: pointer;
        opacity: 0.7;
        transition: opacity 0.3s ease;
      }
      
      .notification-close:hover {
        opacity: 1;
      }
      
      @keyframes slideIn {
        from {
          transform: translateX(100%);
          opacity: 0;
        }
        to {
          transform: translateX(0);
          opacity: 1;
        }
      }
      
      .input-ripple {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 2px;
        background: linear-gradient(90deg, #f352ff, #00d9ff);
        animation: ripple 0.6s ease;
      }
      
      @keyframes ripple {
        0% {
          transform: scaleX(0);
          opacity: 1;
        }
        100% {
          transform: scaleX(1);
          opacity: 0;
        }
      }
    `;
    document.head.appendChild(notificationStyles);

    // Parallax effect for contact section
    window.addEventListener('scroll', () => {
      const scrolled = window.pageYOffset;
      const particles = document.querySelectorAll('.particle');
      
      particles.forEach((particle, index) => {
        const speed = 0.1 + (index * 0.05);
        const yPos = -(scrolled * speed);
        particle.style.transform = `translateY(${yPos}px)`;
      });
    });
  });
</script>