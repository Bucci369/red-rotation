---
// Die Datenstruktur, die die Komponente erwartet
export interface Item {
    type: 'image' | 'video';
    src: string;
    alt: string;
    title?: string; // Optional machen, da es bei Portrait/Sport fehlen kann
    desc?: string;  // Optional machen, da es bei Portrait/Sport fehlen kann
    poster?: string;
}

export interface Props {
    items: ReadonlyArray<Item>;
}

const { items } = Astro.props;
---
<section class="landscapes section" id="landscapes">
    <h2 class="section-title serif">Landschaften</h2>
    <div class="landscape-grid">
        {items.map((item, index) => (
            <div class={`landscape-item portfolio-item-reveal stagger-${index + 1}`}>
                {item.type === 'video' ? (
                    <video autoplay loop muted playsinline poster={item.poster} class="portfolio-video" data-smart-video>
                        <source src={item.src} type="video/mp4" />
                    </video>
                ) : (
                    <img src={item.src} alt={item.alt} loading="lazy" decoding="async" />
                )}
                <div class="landscape-overlay">
                    <div class="landscape-title">{item.title}</div>
                    <div class="landscape-desc">{item.desc}</div>
                </div>
            </div>
        ))}
    </div>
</section>