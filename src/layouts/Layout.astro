---
/*
=== WEBSITE CONFIGURATION ===
Konfiguriere hier alle wichtigen Einstellungen für deine Fotografen-Website
*/

const config = {
  // Website Info
  title: "Red Rotation Photography",
  photographer: "[Dein Name]",
  description: "Professionelle Fotografie mit künstlerischem Anspruch",
  
  // Theme Colors (Dopaminfarben)
  colors: {
    primary: "#f352ff", // Dopamine Pink
    secondary: "#00d9ff", // Electric Blue
    accent: "#ff6b6b", // Coral Red
  },
  
  // Animation Speeds
  parallax: {
    heroSpeed: 0.5,
    backgroundSpeed: 0.3,
    foregroundSpeed: 0.7,
  },
  
  // Video Settings
  video: {
    autoplay: true,
    muted: true,
    loop: true,
    quality: "1080p",
  },
  
  // Performance
  lazyLoading: true,
  preloadImages: 3,
};

const { title } = Astro.props;
---

<!doctype html>
<html lang="de" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="description" content={config.description} />
		<meta name="author" content={config.photographer} />
		<meta name="keywords" content="Fotografie, Photography, Portfolio, Professionell, Künstlerisch" />
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:title" content={title || config.title} />
		<meta property="og:description" content={config.description} />
		<meta property="og:image" content="/image_bergspitze_ohne_hintergrund.png" />
		
		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:title" content={title || config.title} />
		<meta property="twitter:description" content={config.description} />
		<meta property="twitter:image" content="/image_bergspitze_ohne_hintergrund.png" />
		
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title || config.title}</title>
		
		<!-- Preload critical resources -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet" />
		<link rel="preload" href="/image_hintergrund_von_bergspitze.png" as="image" />
		<link rel="preload" href="/image_bergspitze_ohne_hintergrund.png" as="image" />
		
		<!-- Performance optimizations -->
		<meta name="theme-color" content="#f352ff" />
		<meta name="msapplication-TileColor" content="#f352ff" />
		
		<!-- CSS Custom Properties for theming -->
		<style>
			:root {
				--dopamine-50: #fef7ff;
				--dopamine-500: #f352ff;
				--dopamine-600: #e920ff;
				--electric-400: #00d9ff;
				--electric-500: #00bfff;
				--coral-500: #ff6b6b;
				--glass-light: rgba(255, 255, 255, 0.1);
				--glass-dark: rgba(0, 0, 0, 0.2);
				--glass-border: rgba(255, 255, 255, 0.2);
			}
			
			.dark {
				--glass-border: rgba(255, 255, 255, 0.1);
			}
			
			/* Smooth scrollbar */
			::-webkit-scrollbar {
				width: 8px;
			}
			::-webkit-scrollbar-track {
				background: transparent;
			}
			::-webkit-scrollbar-thumb {
				background: linear-gradient(135deg, var(--dopamine-500), var(--electric-400));
				border-radius: 10px;
			}
			::-webkit-scrollbar-thumb:hover {
				background: linear-gradient(135deg, var(--dopamine-600), var(--electric-500));
			}
			
			/* Reduced motion support */
			@media (prefers-reduced-motion: reduce) {
				*,
				*::before,
				*::after {
					animation-duration: 0.01ms !important;
					animation-iteration-count: 1 !important;
					transition-duration: 0.01ms !important;
				}
			}
			
			/* Performance optimized parallax */
			.parallax-layer {
				will-change: transform;
				transform: translateZ(0);
			}
		</style>
	</head>
	<body class="bg-gradient-to-br from-slate-50 via-white to-slate-100 dark:from-gray-900 dark:via-gray-800 dark:to-black text-gray-900 dark:text-white transition-all duration-500 overflow-x-hidden antialiased">
		<!-- Enhanced Dark Mode Toggle with Glassmorphism -->
		<button 
			id="theme-toggle" 
			class="fixed top-6 right-6 z-50 p-4 rounded-2xl glass-morphism dark:dark-glass-morphism hover:scale-105 transition-all duration-300 group shadow-lg hover:shadow-xl"
			aria-label="Toggle Dark Mode"
		>
			<div class="relative w-6 h-6">
				<svg class="sun absolute inset-0 w-6 h-6 text-amber-500 transition-all duration-300 group-hover:rotate-45 group-hover:scale-110" fill="currentColor" viewBox="0 0 24 24">
					<path d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 1 0-14 7 7 0 0 1 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.4A.8.8 0 0 1 4 12zm16.4-8.4a.8.8 0 0 1 0 1.131L18.69 6.447a.8.8 0 0 1-1.131-1.131L19.269 3.6a.8.8 0 0 1 1.131 0zm-14.14 0a.8.8 0 0 1 1.131 0L9.1 5.316A.8.8 0 1 1 7.969 6.447L6.26 4.73a.8.8 0 0 1 0-1.131zM19.269 20.4a.8.8 0 0 1-1.131 0l-1.716-1.716a.8.8 0 0 1 1.131-1.131l1.716 1.716a.8.8 0 0 1 0 1.131zm-14.14 0a.8.8 0 0 1 0-1.131l1.716-1.716a.8.8 0 0 1 1.131 1.131L6.26 19.4a.8.8 0 0 1-1.131 0z"/>
				</svg>
				<svg class="moon absolute inset-0 w-6 h-6 text-indigo-400 opacity-0 transition-all duration-300 group-hover:-rotate-45 group-hover:scale-110" fill="currentColor" viewBox="0 0 24 24">
					<path d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"/>
				</svg>
			</div>
			
			<!-- Ripple effect -->
			<div class="absolute inset-0 rounded-2xl overflow-hidden">
				<div class="ripple-effect absolute inset-0 bg-dopamine-500/20 rounded-2xl scale-0 transition-transform duration-300 group-hover:scale-100"></div>
			</div>
		</button>

		<slot />
		
		<!-- Enhanced Theme Toggle & Interaction Scripts -->
		<script>
			// Performance Monitor (Development Only)
			if (window.location.hostname === 'localhost') {
				let performanceMonitor = document.createElement('div');
				performanceMonitor.id = 'perf-monitor';
				performanceMonitor.className = 'fixed bottom-4 left-4 z-50 p-3 rounded-lg glass-morphism text-sm font-mono opacity-80';
				performanceMonitor.innerHTML = '<div id="fps">FPS: <span>0</span></div><div id="memory">Memory: <span>0</span>MB</div>';
				document.body.appendChild(performanceMonitor);
				
				let lastTime = performance.now();
				let frames = 0;
				
				function updatePerformance() {
					frames++;
					const now = performance.now();
					if (now >= lastTime + 1000) {
						const fps = Math.round((frames * 1000) / (now - lastTime));
						const memory = (performance.memory?.usedJSHeapSize / 1048576 || 0).toFixed(1);
						
						document.querySelector('#fps span').textContent = fps;
						document.querySelector('#memory span').textContent = memory;
						
						// Color coding
						const fpsEl = document.querySelector('#fps');
						fpsEl.style.color = fps >= 50 ? '#10b981' : fps >= 30 ? '#f59e0b' : '#ef4444';
						
						frames = 0;
						lastTime = now;
					}
					requestAnimationFrame(updatePerformance);
				}
				updatePerformance();
			}
			
			// Enhanced Theme Toggle
			const themeToggle = document.getElementById('theme-toggle');
			const htmlElement = document.documentElement;
			const sunIcon = themeToggle.querySelector('.sun');
			const moonIcon = themeToggle.querySelector('.moon');
			
			// Check system preference
			const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
			const currentTheme = localStorage.getItem('theme') || (prefersDark ? 'dark' : 'light');
			
			function updateTheme(theme) {
				if (theme === 'dark') {
					htmlElement.classList.add('dark');
					sunIcon.style.opacity = '0';
					moonIcon.style.opacity = '1';
					localStorage.setItem('theme', 'dark');
				} else {
					htmlElement.classList.remove('dark');
					sunIcon.style.opacity = '1';
					moonIcon.style.opacity = '0';
					localStorage.setItem('theme', 'light');
				}
			}
			
			updateTheme(currentTheme);
			
			themeToggle.addEventListener('click', () => {
				const isDark = htmlElement.classList.contains('dark');
				updateTheme(isDark ? 'light' : 'dark');
			});
			
			// Listen for system theme changes
			window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
				if (!localStorage.getItem('theme')) {
					updateTheme(e.matches ? 'dark' : 'light');
				}
			});
			
			// Global Intersection Observer for animations
			const observerOptions = {
				threshold: 0.1,
				rootMargin: '0px 0px -50px 0px'
			};
			
			const animationObserver = new IntersectionObserver((entries) => {
				entries.forEach(entry => {
					if (entry.isIntersecting) {
						entry.target.classList.add('animate-in');
						// Stop observing once animated
						animationObserver.unobserve(entry.target);
					}
				});
			}, observerOptions);
			
			// Initialize animations on DOM load
			document.addEventListener('DOMContentLoaded', () => {
				const animatedElements = document.querySelectorAll('[data-animate]');
				animatedElements.forEach(el => {
					el.classList.add('opacity-0', 'translate-y-8');
					animationObserver.observe(el);
				});
			});
			
			// Custom cursor for premium feel
			document.addEventListener('mousemove', (e) => {
				const cursor = document.querySelector('#custom-cursor');
				if (cursor) {
					cursor.style.left = e.clientX + 'px';
					cursor.style.top = e.clientY + 'px';
				}
			});
			
			// Global error handling
			window.addEventListener('error', (e) => {
				console.error('Global error:', e.error);
			});
			
			// Performance optimization
			const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
			if (prefersReducedMotion) {
				document.documentElement.style.setProperty('--animation-duration', '0.01ms');
			}
		</script>
		
		<!-- Custom Cursor -->
		<div id="custom-cursor" class="fixed pointer-events-none z-50 w-4 h-4 bg-dopamine-500/30 rounded-full mix-blend-difference transition-all duration-100 hidden lg:block"></div>
	</body>
</html>
